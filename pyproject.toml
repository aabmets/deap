[tool.poetry]
name = "deap-er"
version = "2.0.0"
description = "Distributed Evolutionary Algorithms in Python - Entirely Reworked"
authors = ["Mattias Aabmets <mattias.aabmets@gmail.com>"]
license = "MIT License"
readme = "README.md"
packages = [
    { include = "deap_er" }
]
keywords = [
    "deap",
    "evolution",
    "evolutionary algorithms",
    "genetic algorithms",
    "genetic programming",
    "symbolic regression",
    "hypervolume"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Artificial Life",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: OS Independent"
]

[tool.poetry.urls]
"Repository" = "https://github.com/aabmets/deap-er"
"Documentation" = "https://deap-er.readthedocs.io"

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^2.0.1"
scipy = "^1.14.0"
dill = "^0.3.8"
setuptools = "^72.1.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-xdist = {extras = ["psutil"], version = "^3.6.1"}
coverage = "^7.6.1"
flake8 = "^7.1.1"
isort = "^5.13.2"
mypy = "^1.11.1"
black = "^24.8.0"
Sphinx = "^7.4.7"
sphinx-rtd-theme = "2.0.0"
sphinx_design = "^0.6.1"

[tool.pytest.ini_options]
cache_dir = ".cache"
console_output_style = "count"
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["tests"]
addopts = [
    "--cov=deap_er",
    "--cov-report=html",
    "--no-cov-on-fail",
    "--import-mode=append",
    "--numprocesses=auto",
    "--maxprocesses=8",
    "--dist=worksteal"
]
pythonpath = [
    ".",
    "./deap_er"
]

[tool.coverage.run]
branch = true
source = ["deap_er/*"]

[tool.coverage.report]
fail_under = 90
skip_empty = true
ignore_errors = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod"
]

[tool.coverage.html]
directory = ".htmlcov"

[tool.mypy]
files = ["deap_er"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
